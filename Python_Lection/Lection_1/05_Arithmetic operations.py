# Арифмитические операции
# +, -, *, /, %, //, **
# Приоритет операций
# **, ⊕, ⊖, *, /, //, %, +, -

a = 123
b = 321
c = a+b
print(c)

a = 123
b = -321 #унарный минус
c = a+b
print(c)

a = +123 #унарный плюс (в математике не пишется в программировании редко может писаться)
b = -321 #унарный минус
c = a+b
print(c)

a = 2
b = 8
c = a-b
print(c)

a = 2
b = 8
c = a*b
print(c)

a = 2
b = 8
c = a / b
print(c)
# по умолчанию операция деления в вещественных числах

a = 10
b = 8
c = a // b #деление в целых числах (вспоминаем как в C# тип int) 
print(c)

a = 10
b = 8
c = a % b #остаток от деления 
print(c)

# возведение в степень
a = 2
b = 8
c = a ** b # 2 в 8 степени 
print(c)

# в пайтон нет ограничений по хранению данных в переменно
# в C# строго выделено 32bit для хранения данных целого числа int
a = 2
b = 800
c = a ** b # 2 в 800 степени работает
print(c)

########################################
# особенность умножения вещественного числа на целое
# функция ROUND
########################################
a = 1.3
b = 3
c = round(a * b) # по умолчанию округляет
print(c)

a = 1.3
b = 3
c = round(a * b, 5) # (, аргумент сколько чисел показать после запятой)
print(c) #нули соответсвенно не показывает, поэтому не смотря на аргумент 5 показано 1 число

a = 1.312312
b = 3
c = round(a * b, 5) 
print(c)

####################
#сокращенные операции присваивания
####################
a = 3
a = a + 5
print(a)

a = 3
a += 5 # тоже самое что a = a + 5
print(a)